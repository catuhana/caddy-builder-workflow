name: Build Caddy

on:
  workflow_dispatch:
    inputs:
      caddy_version:
        description: Caddy version to build
        type: string
        default: latest
      xcaddy_version:
        description: xcaddy version
        type: string
        default: latest
      caddy_plugins:
        description: Plugins to build Caddy with. Plugins are comma separated.
        type: string
        default: github.com/caddy-dns/cloudflare

env:
  CADDY_VERSION: ${{ github.event.inputs.caddy_version }}
  XCADDY_VERSION: ${{ github.event.inputs.xcaddy_version }}

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Caddy GitHub repository
        uses: actions/checkout@v4
        with:
          repository: caddyserver/caddy
          fetch-depth: 0

      - name: Set-up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable # Use latest stable since Caddy recommends higher versions instead of one specific one
          cache: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: tuhana
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Retrieve latest Caddy version
        if: ${{ github.event.inputs.caddy_version == 'latest' }}
        run: echo "CADDY_VERSION=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r '.tag_name')" >>$GITHUB_ENV

      - name: Retrieve latest xcaddy version
        if: ${{ github.event.inputs.xcaddy_version == 'latest' }}
        run: echo "XCADDY_VERSION=$(curl -s https://api.github.com/repos/caddyserver/xcaddy/releases/latest | jq -r '.tag_name')" >>$GITHUB_ENV

      - name: Install xcaddy
        run: |
          curl -fsSL -o xcaddy.deb \
            https://github.com/caddyserver/xcaddy/releases/download/${XCADDY_VERSION}/xcaddy_${XCADDY_VERSION#v}_linux_amd64.deb
          sudo apt install ./xcaddy.deb

      - name: Generate build arguments for xcaddy
        id: build-arguments
        run: echo "build-arguments=$(echo -n '${{ inputs.caddy_plugins }}' | awk -v RS=',' '{printf "--with %s ", $0}')" >>$GITHUB_OUTPUT

      - name: Generate plugin tags for container image
        id: container-plugin-tags
        run: |
          {
            echo "container-plugin-tags=$(echo -n '${{ inputs.caddy_plugins }}' | awk 'BEGIN{RS=","; FS="/"} {gsub("@","-",$NF); printf "with-plugin-%s ", $NF}')"
          } >>$GITHUB_OUTPUT

      - name: Extract metadata for container image
        uses: docker/metadata-action@v5
        id: container-metadata
        with:
          images: |
            tuhana/caddy
            ghcr.io/${{ github.repository }}
          tags: |
            ${{ env.CADDY_VERSION }}
            ${{ steps.container-plugin-tags.outputs.container-plugin-tags }}

      - name: Build Caddy with plugins
        run: xcaddy build ${{ steps.build-arguments.outputs.result }}

      - name: Create Containerfile
        run: |
          cat <<'EOF' >Containerfile
          ARG CADDY_VERSION=${CADDY_VERSION#v}

          FROM docker.io/caddy:${CADDY_VERSION}
          COPY ./caddy /usr/bin/caddy
          EOF

      - name: Build and publish container image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: Containerfile
          tags: ${{ steps.container-metadata.outputs.tags }}
          labels: ${{ steps.container-metadata.outputs.labels }}
          build-args: |
            CADDY_VERSION=${{ env.CADDY_VERSION }}

      - name: Upload built binary to workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: caddy
          path: ./caddy
